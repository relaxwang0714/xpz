<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.xpz.mapper.VillageMapper">
  <resultMap id="BaseResultMap" type="com.example.xpz.entity.Village">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    <result column="collective_income" jdbcType="DECIMAL" property="collectiveIncome" />
    <result column="average_income" jdbcType="DECIMAL" property="averageIncome" />
    <result column="average_income_rate" jdbcType="DECIMAL" property="averageIncomeRate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, profile, collective_income, average_income, average_income_rate
  </sql>
  <select id="selectByExample" parameterType="com.example.xpz.entity.VillageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from village
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from village
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from village
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.xpz.entity.VillageExample">
    delete from village
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.xpz.entity.Village">
    insert into village (id, create_time, update_time, 
      profile, collective_income, average_income, 
      average_income_rate)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{profile,jdbcType=VARCHAR}, #{collectiveIncome,jdbcType=DECIMAL}, #{averageIncome,jdbcType=DECIMAL}, 
      #{averageIncomeRate,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xpz.entity.Village">
    insert into village
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="profile != null">
        profile,
      </if>
      <if test="collectiveIncome != null">
        collective_income,
      </if>
      <if test="averageIncome != null">
        average_income,
      </if>
      <if test="averageIncomeRate != null">
        average_income_rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="collectiveIncome != null">
        #{collectiveIncome,jdbcType=DECIMAL},
      </if>
      <if test="averageIncome != null">
        #{averageIncome,jdbcType=DECIMAL},
      </if>
      <if test="averageIncomeRate != null">
        #{averageIncomeRate,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.xpz.entity.VillageExample" resultType="java.lang.Long">
    select count(*) from village
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update village
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.profile != null">
        profile = #{record.profile,jdbcType=VARCHAR},
      </if>
      <if test="record.collectiveIncome != null">
        collective_income = #{record.collectiveIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.averageIncome != null">
        average_income = #{record.averageIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.averageIncomeRate != null">
        average_income_rate = #{record.averageIncomeRate,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update village
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      profile = #{record.profile,jdbcType=VARCHAR},
      collective_income = #{record.collectiveIncome,jdbcType=DECIMAL},
      average_income = #{record.averageIncome,jdbcType=DECIMAL},
      average_income_rate = #{record.averageIncomeRate,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xpz.entity.Village">
    update village
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="collectiveIncome != null">
        collective_income = #{collectiveIncome,jdbcType=DECIMAL},
      </if>
      <if test="averageIncome != null">
        average_income = #{averageIncome,jdbcType=DECIMAL},
      </if>
      <if test="averageIncomeRate != null">
        average_income_rate = #{averageIncomeRate,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xpz.entity.Village">
    update village
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      profile = #{profile,jdbcType=VARCHAR},
      collective_income = #{collectiveIncome,jdbcType=DECIMAL},
      average_income = #{averageIncome,jdbcType=DECIMAL},
      average_income_rate = #{averageIncomeRate,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>