<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.xpz.mapper.ZiyuanIncomeMapper">
  <resultMap id="BaseResultMap" type="com.example.xpz.entity.ZiyuanIncome">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="juming_income" jdbcType="DECIMAL" property="jumingIncome" />
    <result column="fangchan_income" jdbcType="DECIMAL" property="fangchanIncome" />
    <result column="tudi_income" jdbcType="DECIMAL" property="tudiIncome" />
    <result column="jidu" jdbcType="INTEGER" property="jidu" />
    <result column="village_id" jdbcType="INTEGER" property="villageId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, juming_income, fangchan_income, tudi_income, jidu, 
    village_id
  </sql>
  <select id="selectByExample" parameterType="com.example.xpz.entity.ZiyuanIncomeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ziyuan_income
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ziyuan_income
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ziyuan_income
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.xpz.entity.ZiyuanIncomeExample">
    delete from ziyuan_income
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.xpz.entity.ZiyuanIncome">
    insert into ziyuan_income (id, create_time, update_time, 
      juming_income, fangchan_income, tudi_income, 
      jidu, village_id)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{jumingIncome,jdbcType=DECIMAL}, #{fangchanIncome,jdbcType=DECIMAL}, #{tudiIncome,jdbcType=DECIMAL}, 
      #{jidu,jdbcType=INTEGER}, #{villageId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xpz.entity.ZiyuanIncome">
    insert into ziyuan_income
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="jumingIncome != null">
        juming_income,
      </if>
      <if test="fangchanIncome != null">
        fangchan_income,
      </if>
      <if test="tudiIncome != null">
        tudi_income,
      </if>
      <if test="jidu != null">
        jidu,
      </if>
      <if test="villageId != null">
        village_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jumingIncome != null">
        #{jumingIncome,jdbcType=DECIMAL},
      </if>
      <if test="fangchanIncome != null">
        #{fangchanIncome,jdbcType=DECIMAL},
      </if>
      <if test="tudiIncome != null">
        #{tudiIncome,jdbcType=DECIMAL},
      </if>
      <if test="jidu != null">
        #{jidu,jdbcType=INTEGER},
      </if>
      <if test="villageId != null">
        #{villageId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.xpz.entity.ZiyuanIncomeExample" resultType="java.lang.Long">
    select count(*) from ziyuan_income
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ziyuan_income
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jumingIncome != null">
        juming_income = #{record.jumingIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.fangchanIncome != null">
        fangchan_income = #{record.fangchanIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.tudiIncome != null">
        tudi_income = #{record.tudiIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.jidu != null">
        jidu = #{record.jidu,jdbcType=INTEGER},
      </if>
      <if test="record.villageId != null">
        village_id = #{record.villageId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ziyuan_income
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      juming_income = #{record.jumingIncome,jdbcType=DECIMAL},
      fangchan_income = #{record.fangchanIncome,jdbcType=DECIMAL},
      tudi_income = #{record.tudiIncome,jdbcType=DECIMAL},
      jidu = #{record.jidu,jdbcType=INTEGER},
      village_id = #{record.villageId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xpz.entity.ZiyuanIncome">
    update ziyuan_income
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jumingIncome != null">
        juming_income = #{jumingIncome,jdbcType=DECIMAL},
      </if>
      <if test="fangchanIncome != null">
        fangchan_income = #{fangchanIncome,jdbcType=DECIMAL},
      </if>
      <if test="tudiIncome != null">
        tudi_income = #{tudiIncome,jdbcType=DECIMAL},
      </if>
      <if test="jidu != null">
        jidu = #{jidu,jdbcType=INTEGER},
      </if>
      <if test="villageId != null">
        village_id = #{villageId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xpz.entity.ZiyuanIncome">
    update ziyuan_income
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      juming_income = #{jumingIncome,jdbcType=DECIMAL},
      fangchan_income = #{fangchanIncome,jdbcType=DECIMAL},
      tudi_income = #{tudiIncome,jdbcType=DECIMAL},
      jidu = #{jidu,jdbcType=INTEGER},
      village_id = #{villageId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>